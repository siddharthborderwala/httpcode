{
  "100": {
    "reason": "Continue",
    "brief": "The initial part of the request has been received and everything is OK. The server intends to send the final response when the whole request is received. The client may ignore this response if the request has already finished.",
    "useCase": "The client intends to send a payload, but it sends the related headers first with a header `Expect: '100-Continue'`, if the server accepts the request, the client will send the payload."
  },
  "101": {
    "reason": "Switching Protocols",
    "brief": "The server understands the request and it is ready to accept and serve it, but it wants the client to change protocols, assuming doing so is advantageous. Some reasons maybe security, performance and protocol-limitations.",
    "useCase": "The client sends an HTTP request and the server agrees to comply with the request, but it sends back a response with status 101 and an `Upgrade: 'HTTPS'`. The client will now send the request using the HTTPS protocol instead. Here, the payload of the request remains the same."
  },
  "200": {
    "reason": "OK",
    "brief": "The client's request was successfully received, understood, accepted and served by the server. The response ought to contain a payload with a size more than zero.",
    "useCase": "A client requests for a webpage like https://www.google.com/ and the server replies with a response containing the said resource."
  },
  "201": {
    "reason": "Created",
    "brief": "The server understands the request and it creates one or more resources as specified in the request's body. The response contains the header `Location: '<url>'` specifying the url of the created resource(s).",
    "useCase": "A client wants to create a new object in the database, and it sends the payload in the request body. The server accepts the request and accordingly creates the resources and replies with a 204 status along with the URL of the created resource in the headers and the resource itself in the response body."
  },
  "202": {
    "reason": "Accepted",
    "brief": "The server has accepted the request for processing, but the process hasn't been completed yet. Eventually, the request may or may not be acted upon, as it may be disallowed during the processing. There is no mechanism to send back a response after the processing has been completed.",
    "useCase": "A client wants to send an email using an API like sendgrid. The client sends the request with the payload, the server accepts it and sends a 202 response. The server may send this as it may be batching similar processes or processing the said payload in an asynchronous manner and does not want/need to maintain a persistent connection with the client."
  },
  "203": {
    "reason": "Non-Authoritative Information",
    "brief": "The request is successfully served, but the payload has been modified by a transformation proxy for advantageous reasons in a form, different from, what would be a normal '200 OK' response's payload.",
    "useCase": "A client requests for an image resource and let's say under normal circumstances the image sent would be in the png but the transforming proxy converts it into a webp file and the server sends it over with a 203 response."
  },
  "204": {
    "reason": "No Content",
    "brief": "The server has accepted the request and processed it successfully, but there is no payload it has to send over to the client. So, it sends a 204 HTTP response back with an empty body and some related headers.",
    "useCase": "You are editing a document in a web application and the browser sends a request to the server to save a particular paragraph. The server accepts and processes the request and sends back a 204 response with no payload."
  },
  "205": {
    "reason": "Reset Content",
    "brief": "The request has been accepted and processed and now the server wants the client to reset the part of the user interface that made the request, for example a form. The server sends no payload back to the client.",
    "useCase": "The client has sent a request containing a one-time-password for user authentication. The server has accepted the request, authenticated the user and now wants the client to reload the page, enabling the user to view the protected route."
  },
  "206": {
    "reason": "Partial Content",
    "brief": "The request has been accepted and the response body contains the range(s) of data specified by the request in its `Range` header. The server may send back a single range or a set of ranges depending on the request.",
    "useCase": "A user is viewing a video on the browser, as videos are quite large in size, the server won't send all of it in one go. The client will ask for a range of bytes, and the server will respond with the said bytes."
  },
  "300": {
    "reason": "Multiple Choices",
    "brief": "The server has accepted the request, but the said resource has more than one representations. The server sends back each of the alternatives, so that the client can decide which one it wants and make the request for it.",
    "useCase": "A client has asked for particular webpage in English language and the server responds with a 300 response including the list of specific locales for English like 'en-US', 'en-UK', etc. for the client to decide which on it wants."
  },
  "301": {
    "reason": "Moved Permanently",
    "brief": ""
  },
  "302": {
    "reason": "Found",
    "brief": ""
  },
  "303": {
    "reason": "See Other",
    "brief": ""
  },
  "304": {
    "reason": "Not Modified",
    "brief": ""
  },
  "305": {
    "reason": "Use Proxy",
    "brief": ""
  },
  "307": {
    "reason": "Temporary Redirect",
    "brief": ""
  },
  "308": {
    "reason": "Permanent Redirect",
    "brief": ""
  },
  "400": {
    "reason": "Bad Request",
    "brief": ""
  },
  "401": {
    "reason": "Unauthorized",
    "brief": ""
  },
  "402": {
    "reason": "Payment Required",
    "brief": ""
  },
  "403": {
    "reason": "Forbidden",
    "brief": ""
  },
  "404": {
    "reason": "Not Found",
    "brief": ""
  },
  "405": {
    "reason": "Method Not Allowed",
    "brief": ""
  },
  "406": {
    "reason": "Not Acceptable",
    "brief": ""
  },
  "407": {
    "reason": "Proxy Authentication Required",
    "brief": ""
  },
  "408": {
    "reason": "Request Timeout",
    "brief": ""
  },
  "409": {
    "reason": "Conflict",
    "brief": ""
  },
  "410": {
    "reason": "Gone",
    "brief": ""
  },
  "411": {
    "reason": "Length Required",
    "brief": ""
  },
  "412": {
    "reason": "Precondition Failed",
    "brief": ""
  },
  "413": {
    "reason": "Payload Too Large",
    "brief": ""
  },
  "414": {
    "reason": "URI Too Long",
    "brief": ""
  },
  "415": {
    "reason": "Unsupported Media Type",
    "brief": ""
  },
  "416": {
    "reason": "Range Not Satisfiable",
    "brief": ""
  },
  "417": {
    "reason": "Expectation Failed",
    "brief": ""
  },
  "418": {
    "reason": "I'm a teapot",
    "brief": ""
  },
  "422": {
    "reason": "Unprocessable Entity",
    "brief": ""
  },
  "425": {
    "reason": "Too Early",
    "brief": ""
  },
  "426": {
    "reason": "Upgrade Required",
    "brief": ""
  },
  "428": {
    "reason": "Precondition Required",
    "brief": ""
  },
  "429": {
    "reason": "Too Many Requests",
    "brief": ""
  },
  "500": {
    "reason": "Internal Server Error",
    "brief": ""
  },
  "501": {
    "reason": "Not Implemented",
    "brief": ""
  },
  "502": {
    "reason": "Bad Gateway",
    "brief": ""
  },
  "503": {
    "reason": "Service Unavailable",
    "brief": ""
  },
  "504": {
    "reason": "Gateway Timeout",
    "brief": ""
  },
  "505": {
    "reason": "HTTP Version Not Supported",
    "brief": ""
  },
  "506": {
    "reason": "Variant Also Negotiates",
    "brief": ""
  },
  "507": {
    "reason": "Insufficient Storage",
    "brief": ""
  },
  "508": {
    "reason": "Loop Detected",
    "brief": ""
  },
  "510": {
    "reason": "Not Extended",
    "brief": ""
  },
  "511": {
    "reason": "Network Authentication Required",
    "brief": ""
  }
}
